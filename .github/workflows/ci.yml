name: CI
on:
  # Only run on PR or main branch.
  # Prevent duplicate actions to safe compute time.
  push:
    branches:
    - main
  pull_request:
    branches:
    - main
  schedule:
    # Run once a week to make sure the current latest version still works
    - cron: "0 0 * * 0"

permissions:
  contents: read
  pull-requests: read

env:
  DOCKER_BUILDKIT: 1

jobs:
  # Check commit messages for compliance with conventional commits.
  commitlint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: wagoid/commitlint-github-action@v6

  # Matrix build for Netbox versions
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        netbox-version:
          - v4.0.11
          - v4.1.11
          - v4.2.5
          - latest
    steps:
      - uses: actions/checkout@v4

      - name: Versions
        run: |
          echo "Running with Docker Version: $(docker --version)"
          echo "Running with Docker Compose Version: $(docker compose --version)"

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry

      - name: Cache Poetry virtualenv
        uses: actions/cache@v4
        id: cache
        with:
          path: ~/.virtualenvs
          key: poetry-$
          restore-keys: |
            poetry-$

      - name: Install Dependencies using Poetry
        run: poetry install
        if: steps.cache.outputs.cache-hit != 'true'

      - name: Build test images
        run: |
          poetry run invoke build
        env:
          NETBOX_VER: ${{ matrix.netbox-version }}

      - name: Run tests
        run: |
          poetry run invoke tests
        env:
          NETBOX_VER: ${{ matrix.netbox-version }}
